{"version":3,"file":"component---src-pages-index-tsx-8731b5dd05cefca99c15.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  approveUSDC,\n  connectSnap,\n  getSnap,\n  shouldDisplayReconnectButton,\n  transferUSDC,\n  unwrap,\n  wrap,\n  swapNative,\n  swapUSDC,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  SendHelloButton,\n  Card,\n  SendTransactionButton,\n} from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\n  color: ${({ theme }) => theme.colors.text.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error.default};\n  color: ${({ theme }) => theme.colors.error.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const symbol = state.chainId === '0x13881' ? 'MATIC' : 'ETH';\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleERC20ApproveClick = async () => {\n    try {\n      await approveUSDC();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleERC20TransferClick = async () => {\n    try {\n      // check if user has USDC before by calling balanceOf on smart contract\n      await transferUSDC();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleWETHDepositClick = async () => {\n    try {\n      await wrap();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleWETHWithdrawClick = async () => {\n    try {\n      await unwrap();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleSwapNativeClick = async () => {\n    try {\n      await swapNative();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleSwapUSDCClick = async () => {\n    try {\n      await swapUSDC();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  return (\n    <Container>\n      <Subtitle>\n        Examples - Ethereum Goerli and Polygon Mumbai. <br />\n        <br />\n        Simulation{' '}\n        <a href=\"https://docs.alchemy.com/reference/simulation\" target=\"_blank\">\n          available\n        </a>{' '}\n        for Ethereum, Polygon and Arbitrum.\n      </Subtitle>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        {!state.isFlask ? (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        ) : (\n          <>\n            {!state.installedSnap && (\n              <Card\n                content={{\n                  title: 'Connect',\n                  description:\n                    'Get started by connecting to and installing the Alchemy snap. Adds an additional tab to MetaMask called Alchemy Insights to show you the results of simulation.',\n                  button: (\n                    <ConnectButton\n                      onClick={handleConnectClick}\n                      disabled={!state.isFlask}\n                    />\n                  ),\n                }}\n                fullWidth\n                disabled={!state.isFlask}\n              />\n            )}\n\n            {shouldDisplayReconnectButton(state.installedSnap) && (\n              <Card\n                content={{\n                  title: 'Reconnect',\n                  description:\n                    'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n                  button: (\n                    <ReconnectButton\n                      onClick={handleConnectClick}\n                      disabled={!state.installedSnap}\n                    />\n                  ),\n                }}\n                disabled={!state.installedSnap}\n                fullWidth\n              />\n            )}\n\n            {/* <Card\n              content={{\n                title: 'ERC20 - Approve (WIP)',\n                description:\n                  'Allow the Uniswap Protocol to use your USDC. Gives the Uniswap V3 smart contract permission to use your USDC.',\n                button: (\n                  <SendTransactionButton\n                    onClick={handleERC20ApproveClick}\n                    disabled={!state.installedSnap}\n                  />\n                ),\n              }}\n              disabled={!state.installedSnap}\n              fullWidth\n            /> */}\n\n            <Card\n              content={{\n                title: 'ERC20 - Transfer',\n                description: 'Transfer 1 USDC to demo.eth.',\n                button: (\n                  <SendTransactionButton\n                    onClick={handleERC20TransferClick}\n                    disabled={!state.installedSnap}\n                  />\n                ),\n              }}\n              disabled={!state.installedSnap}\n              fullWidth\n            />\n            <Card\n              content={{\n                title: `W${symbol} - Deposit`,\n                description: `Wrap 1 ${symbol}.`,\n                button: (\n                  <SendTransactionButton\n                    onClick={handleWETHDepositClick}\n                    disabled={!state.installedSnap}\n                  />\n                ),\n              }}\n              disabled={!state.installedSnap}\n            />\n            <Card\n              content={{\n                title: `W${symbol} - Withdraw`,\n                description: `Unwrap 1 ${symbol}.`,\n                button: (\n                  <SendTransactionButton\n                    onClick={handleWETHWithdrawClick}\n                    disabled={!state.installedSnap}\n                  />\n                ),\n              }}\n              disabled={!state.installedSnap}\n            />\n            <Card\n              content={{\n                title: `Uniswap V3 - Swap ${symbol}`,\n                description: `Swap 1 ${symbol} for USDC.`,\n                button: (\n                  <SendTransactionButton\n                    onClick={handleSwapNativeClick}\n                    disabled={!state.installedSnap}\n                  />\n                ),\n              }}\n              disabled={!state.installedSnap}\n              fullWidth={state.chainId !== '0x5'}\n            />\n            {state.chainId === '0x5' && (\n              <Card\n                content={{\n                  title: 'Uniswap V3 - Swap USDC',\n                  description: 'Swap 1 USDC for UNI.',\n                  button: (\n                    <SendTransactionButton\n                      onClick={handleSwapUSDCClick}\n                      disabled={!state.installedSnap}\n                    />\n                  ),\n                }}\n                disabled={!state.installedSnap}\n                fullWidth={state.chainId !== '0x5'}\n              />\n            )}\n          </>\n        )}\n\n        <Notice>\n          <p>\n            Please note that the <b>snap.manifest.json</b> and{' '}\n            <b>package.json</b> must be located in the server root directory and\n            the bundle must be hosted at the location specified by the location\n            field.\n          </p>\n        </Notice>\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["Container","styled","displayName","componentId","theme","mediaQueries","small","Subtitle","props","colors","primary","default","fontSizes","large","text","CardContainer","Notice","background","alternative","border","radii","ErrorMessage","error","muted","useContext","MetaMaskContext","state","dispatch","symbol","chainId","handleConnectClick","_context","connectSnap","getSnap","installedSnap","type","MetamaskActions","payload","console","handleERC20TransferClick","_context3","transferUSDC","handleWETHDepositClick","_context4","wrap","handleWETHWithdrawClick","_context5","unwrap","handleSwapNativeClick","_context6","swapNative","handleSwapUSDCClick","_context7","swapUSDC","_jsxs","children","_jsx","href","target","message","isFlask","Card","content","title","description","button","ConnectButton","onClick","disabled","fullWidth","shouldDisplayReconnectButton","ReconnectButton","SendTransactionButton","InstallFlaskButton"],"sourceRoot":""}